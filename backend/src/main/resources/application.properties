# Server Configuration
server.port=8080

# H2 Database Configuration (for testing/development)
spring.datasource.url=jdbc:h2:mem:restaurant_db
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# PostgreSQL Configuration (uncomment to use PostgreSQL instead of H2)
#spring.datasource.url=jdbc:postgresql://localhost:5432/restaurant_db
#spring.datasource.username=postgres
#spring.datasource.password=Nargiz22
#spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Data initialization
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Logging Configuration
logging.level.org.springframework=INFO
logging.level.com.restaurant=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:3001
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# WebSocket Configuration
spring.websocket.max-text-message-size=8192
spring.websocket.max-binary-message-size=8192

# Performance Optimization
spring.main.lazy-initialization=false
server.tomcat.threads.max=200
spring.main.banner-mode=off 